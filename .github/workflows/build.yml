name: build

on:
  push:
    tags:
      - "*.*.*"
    paths-ignore:
      - README.md
      - examples/**
      - logo.png
      - logo_readme.png

jobs:
  build:
    strategy:
      matrix:
        os:
          - windows-latest
          - ubuntu-20.04
          - macos-latest
        arch: [x64]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout latest sources
        uses: actions/checkout@v3
        with:
          path: re-latest-source
      
      - name: Checkout bootstrap sources
        uses: actions/checkout@v3
        with:
          ref: bootstrap
          path: re-bootstrap-source
          submodules: 'recursive'
          
      - name: Cache vcpkg packages
        uses: actions/cache@v3
        with:
          path: |
            ./re-bootstrap-source/out/_deps
          key: ${{ runner.os }}-vcpkg-v2

      - name: Set up Ninja
        uses: seanmiddleditch/gha-setup-ninja@master
        if: runner.os != 'Windows'
          
      - name: Set up CMake
        if: runner.os != 'Windows'
        uses: jwlawson/actions-setup-cmake@v1.13

      - name: Set up VsDevCmd
        if: runner.os == 'Windows'
        uses: egor-tensin/vs-shell@v2
        with:
          arch: ${{ matrix.arch }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 

      - name: Run the bootstrap script
        shell: pwsh
        run: python ./re-latest-source/setup/bootstrap-re.py --auto --arch ${{ matrix.arch }} --main_src_dir ./re-latest-source
        #env:
        #  RE_GITHUB_FORCE_SSH: 1

      - name: Create CI artifact
        uses: actions/upload-artifact@v3
        with:
          name: re-${{ github.ref_name }}-${{ runner.os }}-${{ matrix.arch }}-${{ github.run_id }}
          path: ./re-latest-build/
          
      - name: Archive release files
        uses: thedoctor0/zip-release@0.6.2
        with:
          type: zip
          filename: '../re-${{ github.ref_name }}-${{ runner.os }}-${{ matrix.arch }}.zip'
          directory: ./re-latest-build/
          
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: 're-${{ github.ref_name }}-${{ runner.os }}-${{ matrix.arch }}.zip'
      
      - name: Create package definition
        if: runner.os == 'Linux'
        run: |
          mkdir -p .debpkg/usr/local/lib/re/${{ github.ref_name }}/bin
          mkdir -p .debpkg/usr/local/bin
          mkdir -p .debpkg/debian

          cp -p -R ./re-latest-build/* .debpkg/usr/local/lib/re/${{ github.ref_name }}/bin
          echo "/usr/local/lib/re/${{ github.ref_name }}/bin/re /usr/local/bin/re-${{ github.ref_name }}" > .debpkg/debian/rebs.links

      - id: create-debian-package
        name: Create Debian package
        if: runner.os == 'Linux'
        uses: jiro4989/build-deb-action@v2
        with:
          package: rebs
          desc: A modern build system for the future
          package_root: .debpkg
          maintainer: osdeverr
          version: ${{ github.ref_name }}
          
      - name: Upload Debian package as a CI artifact
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v3
        with:
          name: re-package-${{ github.ref_name }}-${{ runner.os }}-amd64-${{ github.run_id }}
          path: ${{ steps.create-debian-package.outputs.file_name }}

      - name: Create package release
        if: runner.os == 'Linux'
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.create-debian-package.outputs.file_name }}
